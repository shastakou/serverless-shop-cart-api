generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cart_id    String @db.Uuid
  product_id String @db.Uuid
  count      Int
  carts      carts  @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model carts {
  id         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  status     cart_status? @default(OPEN)
  user_id    String?      @db.Uuid
  cart_items cart_items[]
  users      users?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")
  orders     orders[]
}

model users {
  id       String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String
  email    String?
  password String?
  carts    carts[]
  orders   orders[]
}

model orders {
  id       String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id  String        @db.Uuid
  cart_id  String        @db.Uuid
  payment  Json?         @db.Json
  delivery Json?         @db.Json
  status   order_status? @default(OPEN)
  total    Float
  carts    carts         @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users    users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum cart_status {
  OPEN
  ORDERED
}

enum order_status {
  OPEN
  APPROVED
  CONFIRMED
  SENT
  COMPLETED
  CANCELLED
}
